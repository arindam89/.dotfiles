# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

# It's not necessary to copy all keys to your config.
# If the key is missing in your config, "default-config.toml" will serve as a fallback

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = [
    'exec-and-forget borders active_color=0xffe1e3e4 inactive_color=0xff494d64 width=5.0',
    #'exec ~/.config/aerospace/open_and_move_apps.sh',
]

# Start AeroSpace at login
start-at-login = true

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 5

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
key-mapping.preset = 'qwerty'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# on-focused-monitor-changed = ['move-mouse monitor-lazy-center']
# on-focus-changed = "move-mouse window-lazy-center"

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 5
inner.vertical =   5
outer.left =       5
outer.bottom =     5
outer.top =        5
outer.right =      5

# You can use workspace-to-monitor-force-assignment syntax to assign workspaces to always appear on particular monitors
# See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[workspace-to-monitor-force-assignment]
1 = 'secondary'
2 = 'secondary'
3 = 'secondary'
4 = 'secondary'
5 = 'secondary'
6 = 'secondary'
7 = 'secondary'
8 = 'secondary'
9 = 'secondary'

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
[mode.main.binding]

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# You can uncomment this line to open up terminal with alt + enter shortcut
# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
# alt-enter = 'exec-and-forget open -n /System/Applications/Utilities/Terminal.app'

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
alt-slash = 'layout tiles horizontal vertical'
alt-backslash = 'layout accordion horizontal vertical'
# See: https://nikitabobko.github.io/AeroSpace/commands#focus
alt-h = 'focus left'
alt-j = 'focus down'
alt-k = 'focus up'
alt-l = 'focus right'
# For Accordion mode, this will move the window to the next window in the same container.   
alt-backtick = 'focus up'

# See: https://nikitabobko.github.io/AeroSpace/commands#move
alt-shift-h = 'move left'
alt-shift-j = 'move down'
alt-shift-k = 'move up'
alt-shift-l = 'move right'

# Hack for main mode join
alt-esc = ['join-with right', 'layout accordion horizontal vertical']
alt-r = ['flatten-workspace-tree', 'mode main'] # reset layout


# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
alt-1 = 'workspace 1'
alt-2 = 'workspace 2'
alt-3 = 'workspace 3'
alt-4 = 'workspace 4'
alt-5 = 'workspace 5'
alt-6 = 'workspace 6'
alt-7 = 'workspace 7'
alt-8 = 'workspace 8'
alt-9 = 'workspace 9'
alt-q = 'workspace Q'
alt-w = 'workspace W'
alt-a = 'workspace A'
alt-s = 'workspace S'
alt-d = 'workspace D'
alt-g = 'workspace G'
alt-c = 'workspace C'
alt-z = 'workspace Z'
alt-x = 'workspace X'
alt-n = 'workspace N'
alt-t = 'workspace T'
alt-v = 'workspace V'

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
alt-shift-1 = 'move-node-to-workspace 1'
alt-shift-2 = 'move-node-to-workspace 2'
alt-shift-3 = 'move-node-to-workspace 3'
alt-shift-4 = 'move-node-to-workspace 4'
alt-shift-5 = 'move-node-to-workspace 5'
alt-shift-6 = 'move-node-to-workspace 6'
alt-shift-7 = 'move-node-to-workspace 7'
alt-shift-8 = 'move-node-to-workspace 8'
alt-shift-9 = 'move-node-to-workspace 9'
alt-shift-b = 'move-node-to-workspace B'
alt-shift-c = 'move-node-to-workspace C'
alt-shift-z = 'move-node-to-workspace Z'
alt-shift-x = 'move-node-to-workspace X'
alt-shift-n = 'move-node-to-workspace N'
alt-shift-t = 'move-node-to-workspace T'
alt-shift-v = 'move-node-to-workspace V'
alt-shift-q = 'move-node-to-workspace Q'
alt-shift-w = 'move-node-to-workspace W'
alt-shift-a = 'move-node-to-workspace A'
alt-shift-s = 'move-node-to-workspace S'
alt-shift-d = 'move-node-to-workspace D'

alt-f = 'fullscreen'
alt-shift-f = ['layout floating tiling']

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
alt-tab = 'workspace-back-and-forth'
# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'

alt-e = 'mode resize'
# See: https://nikitabobko.github.io/AeroSpace/commands#mode
alt-semicolon = 'mode service'

[mode.resize.binding]
h = 'resize width -50'
j = 'resize height +50'
k = 'resize height -50'
l = 'resize width +50'
b = 'balance-sizes'

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
minus = 'resize smart -50'
equal = 'resize smart +50'

enter = 'mode main'
esc = 'mode main'

alt-h = ['join-with left', 'layout accordion horizontal vertical', 'mode main']
alt-j = ['join-with down', 'layout accordion horizontal vertical', 'mode main']
alt-k = ['join-with up', 'layout accordion horizontal vertical', 'mode main']
alt-l = ['join-with right', 'layout accordion horizontal vertical', 'mode main']



# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
esc = ['reload-config', 'mode main']
r = ['flatten-workspace-tree', 'mode main'] # reset layout
#s = ['layout sticky tiling', 'mode main'] # sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
f = ['layout floating tiling', 'mode main'] # Toggle between floating and tiling layout
backspace = ['close-all-windows-but-current', 'mode main']






# Workspace 1: General

[[on-window-detected]]
if.app-id = 'com.google.Chrome'
run = "move-node-to-workspace 1"

[[on-window-detected]]
if.app-id = 'com.tinyspeck.slackmacgap'
run = "move-node-to-workspace 1"

# Workspace 2: Coding

[[on-window-detected]]
if.app-id = 'com.microsoft.VSCode'
run = "move-node-to-workspace 2"

[[on-window-detected]]
if.app-id = 'com.googlecode.iterm2'
run = "move-node-to-workspace 2"

# Workspace Z: Personal Browser

[[on-window-detected]]
if.app-id = 'com.apple.Safari'
run = "move-node-to-workspace Z"

[[on-window-detected]]
if.app-id = 'com.google.Chrome.canary'
run = "move-node-to-workspace Z"


# Workspace A: Personal Coding A

[[on-window-detected]]
# Cursor
if.app-id = 'com.todesktop.230313mzl4w4u92'
run = "move-node-to-workspace A"

# WezTerm
[[on-window-detected]]
if.app-id = 'com.github.wez.wezterm'
run = "move-node-to-workspace A"



# Workspace S: Personal Coding B

[[on-window-detected]]
# VSCode Insiders
if.app-id = 'com.microsoft.VSCodeInsiders'
run = "move-node-to-workspace S"

# Windsurf
[[on-window-detected]]
if.app-id = 'com.exafunction.windsurf'
run = "move-node-to-workspace S"

[[on-window-detected]]
if.app-id = 'dev.warp.Warp-Stable'
run = "move-node-to-workspace S"



# Workspace X: Note taking

[[on-window-detected]]
if.app-id = 'notion.id'
run = "move-node-to-workspace X"

[[on-window-detected]]
if.app-id = 'md.obsidian'
run = "move-node-to-workspace X"

# Floating windows

[[on-window-detected]]
if.app-id = 'com.apple.Preview'
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.apple.finder'
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'dev.kdrag0n.MacVirt'
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.openai.chat'
run = ['layout floating']

[[on-window-detected]]
# Chrome Canary Youtube App
if.app-id = 'com.google.Chrome.canary.app.agimnkijcaahngcdmfeangaknmldooml'
run = ['layout floating']

# 4K Video Downloader Plus
# To get the app id, run:
# osascript -e 'id of app "4k Video Downloader+"'
[[on-window-detected]]
if.app-id = 'com.openmedia.4kvideodownloaderplus'
run = ['layout floating']